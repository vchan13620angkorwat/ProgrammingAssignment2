## Put comments here that give an overall description of what your
## functions do

## Write a short comment describing this function

# set the value of the matrix
# get the value of the matrix
# set the value of the inverse matrix
# get the value of the inverse matrix

makeCacheMatrix <- function(x = matrix()) {
  m <- NULL
  k <- NULL
  set <- function(k) {
    x <<- k
    m <<- NULL
  }
  get <- function() x
  setmatrix <- function(solve) m <<- solve
  getmatrix <- function() m
  list(set = set, get = get,
       setmatrix = setmatrix,
       getmatrix = getmatrix)
  
}

## Write a short comment describing this function
# The following function calculates the inverse matrix of the special "matrix" created with the above function.
# However, it first checks to see if the mean has already been calculated. 
# If so, it gets the inverse matrix from the cache and skips the computation. 
# Otherwise, it calculates the inverse matrix of the data and sets the value of the inverse matrix in the cache via the setmatrix function.

cacheSolve <- function(x=matrix(), ...) {
  m<-x$getmatrix()
  if(!is.null(m)){
    message("getting cached data")
    return(m)
  }
  matrix<-x$get()
  m<-solve(matrix, ...)
  x$setmatrix(m)
  m
}
